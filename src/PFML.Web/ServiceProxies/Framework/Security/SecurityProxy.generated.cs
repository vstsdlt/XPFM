// ----------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a compiler emitter: FACTS.Framework.CompileModules.OperationMethod.ProxyEmitter
//
// Changes to this file may cause incorrect behavior and will be lost when the code is regenerated.
// </auto-generated>
// ----------------------------------------------------------------------------------------------------

using System;
using System.Threading.Tasks;
using FACTS.Framework.Web;

namespace PFML.Web.ServiceProxies.Framework.Security
{

    public static class SecurityProxy
    {

        ///<summary>URL base path location for web service</summary>
        private const string servicePath = "Framework/Security";

        ///<summary>ASYNC Web Service call: Retrieve all security definitions in the system</summary>
        ///<remarks>Used during initialization to populate SecurityUtil with data</remarks>
        ///<returns>ASYNC task: List of security definitions</returns>
        public static async Task<System.Collections.Generic.List<string>> FetchDefinitionsAsync()
        {
            using (OperationClient client = new OperationClient(servicePath, "FetchDefinitions"))
            {
                return await client.ReadAsync<System.Collections.Generic.List<string>>();
            }
        }

        ///<summary>Web Service call: Retrieve all security definitions in the system</summary>
        ///<remarks>Used during initialization to populate SecurityUtil with data</remarks>
        ///<returns>List of security definitions</returns>
        public static System.Collections.Generic.List<string> FetchDefinitions()
        {
            return FetchDefinitionsAsync().Result;
        }

        ///<summary>ASYNC Web Service call: Retrieve all security permissions for the current user</summary>
        ///<returns>ASYNC task: List of security keys and access levels</returns>
        public static async Task<System.Collections.Generic.List<System.Tuple<string, FACTS.Framework.Security.SecurityAccess>>> FetchPermissionsAsync()
        {
            using (OperationClient client = new OperationClient(servicePath, "FetchPermissions"))
            {
                return await client.ReadAsync<System.Collections.Generic.List<System.Tuple<string, FACTS.Framework.Security.SecurityAccess>>>();
            }
        }

        ///<summary>Web Service call: Retrieve all security permissions for the current user</summary>
        ///<returns>List of security keys and access levels</returns>
        public static System.Collections.Generic.List<System.Tuple<string, FACTS.Framework.Security.SecurityAccess>> FetchPermissions()
        {
            return FetchPermissionsAsync().Result;
        }

    }

}
